«IMPORT org::applause::applausedsl::applauseDsl»

«EXTENSION templates::iphone::Extensions»

«DEFINE main FOR Application-»
«EXPAND headerFile»
«EXPAND moduleFile»
«ENDDEFINE»




«DEFINE headerFile FOR Application»
«FILE providerFactory().h()»
#import "IPContentProvider.h"
«allProviders().neededClasses().objcImports()»

@interface «providerFactory().name» : NSObject {
	«allProviders().select(e|e.storing).collect(e|"IPContentProvider *"+e.ivar()+";").toString("\n\t")»
}

+ («providerFactory().name» *) sharedProviders;

«allProviders().methodSignature().statements()»

@end
«ENDFILE»
«ENDDEFINE»




«DEFINE moduleFile FOR Application»
«FILE providerFactory().m()»
«providerFactory().importHeader()»

@implementation «providerFactory().name»

static «providerFactory().name» *sharedProviders = nil;

+ («providerFactory().name» *) sharedProviders {
	@synchronized(self) {
		if (sharedProviders == nil)
			sharedProviders = [[self alloc] init];
	}
	return sharedProviders;
}

«EXPAND providerMethodImplementation FOREACH allProviders()»
@end
«ENDFILE»
«ENDDEFINE»




«DEFINE providerMethodImplementation FOR ContentProvider»
«methodSignature()» {
	«IF !this.storing-»
		return «EXPAND constructProvider-»;
	«ELSE»
	if (!«this.ivar()») {
		«this.ivar()» = «EXPAND constructProvider-»;
	}
	return «this.ivar()»;
	«ENDIF»
}
«ENDDEFINE»



«DEFINE constructProvider FOR ContentProvider-»
«IF this.implementation == null-»
[[IPSimpleContentProvider alloc] initWithContent:«type.className().objcAllocInit()»]«ELSE-»
«EXPAND constructProvider(this) FOR this.implementation-»
«ENDIF-»
«ENDDEFINE»



«DEFINE constructProvider(ContentProvider provider) FOR ContentProviderImplementation»
	<Unknown «provider»> 
«ENDDEFINE»

«DEFINE constructProvider(ContentProvider provider) FOR FetchingContentProviderImplementation-»
«LET provider.parameter.name != null ? provider.parameter.name : '' AS kvcTarget-»
[[«this.className()» alloc] initWithURL:[NSURL URLWithString:«url.expression(kvcTarget, '')»]]
«ENDLET-»
«ENDDEFINE»

«DEFINE constructProvider(ContentProvider provider) FOR CustomContentProviderImplementation-»
«this.className().objcAllocInit()»
«ENDDEFINE»