«IMPORT org::applause::applausedsl::applauseDsl»

«EXTENSION templates::iphone::Extensions»

«DEFINE main FOR Model»
«EXPAND main FOR elements.typeSelect(Application).first()»
«ENDDEFINE»

«DEFINE main FOR Application»
«EXPAND headerFile»
«EXPAND moduleFile»
«ENDDEFINE»

«DEFINE headerFile FOR Application»
«FILE filenameApplicationDelegateHeader()»
#import <UIKit/UIKit.h>

@interface «applicationDelegateClassname()» : NSObject <UIApplicationDelegate> {
	UIWindow *window;
	UIViewController *rootController;
}

@property (nonatomic, retain) IBOutlet UIWindow *window;
@property (nonatomic, retain) UIViewController *rootController;

@end
«ENDFILE»
«ENDDEFINE»

«DEFINE importStatements FOR Application-»
«EXPAND importStatement FOREACH buttons-»
«ENDDEFINE»

«DEFINE importStatement FOR TabbarButton-»
#import "«view.view.filenameHeader()»"
«ENDDEFINE»

«DEFINE moduleFile FOR Application»
«FILE filenameApplicationDelegateModule()»
#import "«filenameApplicationDelegateHeader()»"
#import "IPUIView.h"
#import "«filenameCentralProvidersHeader()»"

«EXPAND importStatements-»

/*
 * This is the «this.name» app.
 */
@implementation «applicationDelegateClassname()»

#pragma mark -
#pragma mark Properties

@synthesize window;
@synthesize rootController;

#pragma mark -
#pragma mark View Management

/*
 * Set up the tab bar controller.
 */
-(UIViewController*)createController {
	«centralProvidersClassName()» *providers = [[[«centralProvidersClassName()» alloc] init] autorelease];
	UITabBarController *result = [[UITabBarController alloc] init];
	NSMutableArray *controllers = [NSMutableArray array];
	
	UIViewController<IPUIView> *controller;
	UINavigationController *navController;
	IPContentProvider *contentProvider;

«EXPAND barControllerInstance FOREACH buttons»

	result.viewControllers = controllers;
	return result;
}

#pragma mark -
#pragma mark Application life cycle

/*
 * Set up background (if enabled) and main window layout.
 */
- (void)applicationDidFinishLaunching:(UIApplication *)application {
	application.statusBarStyle = UIStatusBarStyleBlackOpaque;
	«IF this.background != null»
	UIImageView *backgroundImageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:«this.background.expression('','')»]];
	[window addSubview:backgroundImageView];
	[backgroundImageView release];
	«ENDIF»
	self.rootController = [self createController];
	[window addSubview: [self.rootController view]];
	[window makeKeyAndVisible];
}

#pragma mark -
#pragma mark Memory management

/*
 * Clean up.
 */
- (void)dealloc {
	self.rootController = nil;
	[window release];
	[super dealloc];
}

@end
«ENDFILE»
«ENDDEFINE»

«DEFINE barControllerInstance FOR TabbarButton»
	controller = [[«view.view.className()» alloc] init];
	«IF view.provider != null-»
	contentProvider = «view.provider.contentProvider('providers', '', '')»;
	[controller setContentProvider: contentProvider];
	«ENDIF-»
	controller.tabBarItem.title = «title.expression('', '')»;
	controller.tabBarItem.image = [UIImage imageNamed:«this.icon.expression('','')»];
	navController = [[UINavigationController alloc] initWithRootViewController:controller];
	navController.navigationBar.barStyle = UIBarStyleBlack;	
	[controllers addObject: navController];
	[controller release];
	[navController release];
«ENDDEFINE»